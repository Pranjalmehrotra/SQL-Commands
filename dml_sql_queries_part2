----------------------------------Updating Multiple Columns Using One Update Command----------------------------

----------We have table as shown below---------

FirstName   Address      SecondName EmployeeId        hiring_date         salary     city
Nishi	     Lakhimpur	    Mehrotra	  3	        2023-03-09	 40000	  Maurabad
Rishabh	     Noida	    Mehrotra	  4	        2023-04-09	 40000	  jhalwa
Lavi         Delhi	    Mehrotra	  5	        2023-05-09	 40000	  chalk
Lavi	     Delhi	    Mehrotra	  5	        2023-05-09	 1000	  chalk
Rajesh	     Allahabad	    Mehrotra	  2	        2023-02-09	 5000	  Rambagh
---------------------------------------------------------------------------------------------------------------

Query 1 ------>Query to update the set the Address to 'Allahabad' and salary to 20000 of the employes whose hiring_date = '2023-05-09'

update employee_details 
	     set Address = 'Allahabad',
       salary = 20000 
       where hiring_date = '2023-05-09';	
--------------------------------------------------------------------------------------------------------------

After the successful execution of the above, the update table is as shown below:
       
FirstName   Address      SecondName   EmployeeId  	hiring_date  	salary    city
Nishi	     Lakhimpur	   Mehrotra	  3	        2023-03-09	 40000	  Maurabad
Rishabh	     Noida	   Mehrotra	  4	        2023-04-09	 40000	  jhalwa
Lavi         Allahabad     Mehrotra	  5	        2023-05-09	 40000	  chalk
Lavi	     Allahabad     Mehrotra	  5	        2023-05-09	 1000	  chalk
Rajesh	     Allahabad	   Mehrotra	  2	        2023-02-09	 5000	  Rambagh

-----------------------------------------------------------------------------------------------------------------

				-------------AUTO INCREMENT IN SQL-------------------
				
Create table if not exists auto_increament_example(
       id int auto_increment,
       name varchar(50),
       primary key(id)
); 

Note-----> 1. We have to make the auto_increment column as primary key when defining the table
           2. We dont have to insert any value to the auto_increment_column as shown below:
	  
	  
Insert into auto_increament_example (name) 
       values
      ('Pranjal'),
      ('Nishi'),
      ('Rajesh');

---------------------------------------------------------------------------------------------------------

Output:

id      Name

1	Pranjal
2	Nishi
3	Rajesh

As we can see that the numbers has been automatically generated by the mysql

--------------------------------------------------------------------------------------------------------

-------------------------USE OF LIMIT KEYWORD IN MYSQL--------------------

Let suppose we have hundred or thousands of rows but we want to display only certain number of rows then we have to use the limit keyword.

Table -----> employee_details

FirstName   Address      SecondName   EmployeeId  	hiring_date  	salary    city
Nishi	     Lakhimpur	   Mehrotra	  3	        2023-03-09	 40000	  Maurabad
Rishabh	     Noida	   Mehrotra	  4	        2023-04-09	 40000	  jhalwa
Lavi         Allahabad     Mehrotra	  5	        2023-05-09	 40000	  chalk
Lavi	     Allahabad     Mehrotra	  5	        2023-05-09	 1000	  chalk
Rajesh	     Allahabad	   Mehrotra	  2	        2023-02-09	 5000	  Rambagh

------Now we want to display only 2 records from the above table-----------------

Select * from employee_details limit 2;

Output:

FirstName   Address      SecondName   EmployeeId  	hiring_date  	salary    city
Nishi	     Lakhimpur	   Mehrotra	  3	        2023-03-09	 40000	  Maurabad
Rishabh	     Noida	   Mehrotra	  4	        2023-04-09	 40000	  jhalwa

---------------------------------------------------------------------------------------------------------------

-------------------------------SORTING IN MYSSQL---------------------

---------In MySql, we can sort the data either in ascending or descinding order as per the requirement.-------------

Query---->We want to display the above table with name in  descending order.The query for the same is:

Select * from employee_details 
		 order by FirstName desc;
	
	
Output:

	FirstName	Address		SecondName	EmployeeId	hiring_date	salary	city
	Rishabh		Noida		Mehrotra	4		2023-04-09	40000	jhalwa
	Rajesh		Allahabad	Mehrotra	2		2023-02-09	5000	Rambagh
	Nishi		Lakhimpur	Mehrotra	3		2023-03-09	40000	Maurabad
	Lavi		Allahabad	Mehrotra	5		2023-05-09	20000	chalk
	Lavi		Allahabad	Mehrotra	5		2023-05-09	20000	chalk


-----------------------------------------------------------------------------------------------------------------------------

Query------->Display employee data in descending order of salary and if salary of 2 employees matches, then display in ascending order.

Select * from employee_details 
		 order by Salary desc,
         FirstName asc;
	 
Output:
	FirstName	Address		SecondName EmployeeId   hiring_date	salary	        city
	Nishi		Lakhimpur	Mehrotra	3	2023-03-09	40000		Maurabad
	Rishabh		Noida		Mehrotra	4	2023-04-09	40000		jhalwa
	Lavi		Allahabad	Mehrotra	5	2023-05-09	21000		chalk
	Lavi		Allahabad	Mehrotra	5	2023-05-09	21000		chalk
	Rajesh		Allahabad	Mehrotra	2	2023-02-09	5000		Rambagh
	
--------------------------------------------------------------------------------------------------------------------------------------


Query -------> Select the employee with the highest salary among all the salary

Select * from employee_details 
		 order by Salary desc 
         limit 1;

Output:

	FirstName	Address		SecondName	EmployeeId	hiring_date	salary	city
	Nishi		Lakhimpur	Mehrotra	3		2023-03-09	40000	Maurabad

-------------------------------------------------------------------------------------------------------------------

------------------------OPERATORS IN MY SQL AND USE CASE IN WHERE CLAUSE-----------------------

CONDITIONAL OPERATORS------> <, >, <=, >=

LOGICAL OPERATORS-------> AND,OR,NOT

-------------------------------------------------------------------------------------------------------------------

Query--->List all the employees whose salary > 20000:

 Select * from employee_details
		 where salary>20000;
		 
Output:

	FirstName	Address		SecondName EmployeeId   hiring_date	salary	        city
	Nishi		Lakhimpur	Mehrotra	3	2023-03-09	40000		Maurabad
	Rishabh		Noida		Mehrotra	4	2023-04-09	40000		jhalwa
	Lavi		Allahabad	Mehrotra	5	2023-05-09	21000		chalk
	Lavi		Allahabad	Mehrotra	5	2023-05-09	21000		chalk

-------------------------------------------------------------------------------------------------------------------------

Query ---->Select  the records where salary of the employee is equal to 40000

Select * from employe_details
       where salary = 40000;
 
 Output:
 
 	FirstName	Address	        SecondName	EmployeeId	hiring_date	salary	city
	Nishi	        Lakhimpur	Mehrotra	3	2023-03-09	40000	Maurabad
	Rishabh	        Noida	        Mehrotra	4	2023-04-09	40000	jhalwa
------------------------------------------------------------------------------------------------------------------------

Query ---->Select  the records where salary of the employee is  not equal to 40000

Select * from employee_details
		 where salary != 40000;
		 
		 
Output:

	FirstName Address	SecondName	EmployeeId	hiring_date	salary	city
	Lavi	Allahabad	Mehrotra	5	        2023-05-09	21000	chalk
	Lavi	Allahabad	Mehrotra	5	        2023-05-09	21000	chalk
	Rajesh	Allahabad	Mehrotra	2	        2023-02-09	5000	Rambagh
----------------------------------------------------------------------------------------------------------------------

Query-----> Select all the records where hiring date =2023-05-09 and salary is less than 40000

Select * from employee_details
         where hiring_date = '2023-05-09'
         and salary < 40000;

Output:

	FirstName Address	SecondName	EmployeeId	hiring_date	salary	city
	Lavi	  Allahabad	Mehrotra	5	        2023-05-09	21000	chalk
	Lavi	  Allahabad	Mehrotra	5	        2023-05-09	21000	chalk
	
--------------------------------------------------------------------------------------------------------------------------

--------------------USE OF BETWEEN CLAUSE-------------------------

Query-------> Select all the records where hiring date is between 2023-03-09 and 2023-04-09


Select * from employee_details
         where hiring_date
         between '2023-03-09' and '2023-04-09' ;


Output:

	FirstName	Address		SecondName	EmployeeId	hiring_date	salary	city
	Nishi		Lakhimpur	Mehrotra	3		2023-03-09	40000	Maurabad
	Rishabh		Noida		Mehrotra	4		2023-04-09	40000	jhalwa

--------------------------------------------------------------------------------------------------------------------------------------------

       					-------------------------LIKE CLAUSE---------------------
	
This clause is used for the string data type of the column

There are 2 operators which are associated with the like clause:

% ---->  Zero,One or more than one characters
_ ---->  Only one character is there

Query----->Fetch all the records where FirstName starts with N


Select * from employee_details
         where FirstName like 'N%';

Output:

	FirstName	Address		SecondName	EmployeeId	hiring_date	salary	city
	Nishi		Lakhimpur	Mehrotra	3		2023-03-09	40000	Maurabad

------------------------------------------------------------------------------------------------------------

Query ------>Fetch all the records where lastName ends with h:


Select * from employee_details
         where FirstName like '%h';

Output:

	FirstName	Address		SecondName	EmployeeId	hiring_date	salary	city
	Rishabh		Noida		Mehrotra	4		2023-04-09	40000	jhalwa
	Rajesh		Allahabad	Mehrotra	2		2023-02-09	5000	Rambagh 

-------------------------------------------------------------------------------------------------------------

Note----> When we dont have idea of the length of the characters, then always go for the percent symbol.
h%-----> Name should start with the h word
%h----->Name will end with h word
A%h---->Name start with A and end with h.In between, we dont know how many characters are there
--------------------------------------------------------------------------------------------------------------

Query----->Display the records where Name starts with R and ends with h

Select * from employee_details
         where FirstName like 'R%h';

Output:

	FirstName	Address		SecondName	EmployeeId	hiring_date	salary	city
	Rishabh		Noida		Mehrotra	4		2023-04-09	40000	jhalwa
	Rajesh		Allahabad	Mehrotra	2		2023-02-09	5000	Rambagh

-----------------------------------------------------------------------------------------------------------------

Note---->Now when we know the exact number of characters to be displayed we go for the _ symbol.

Query ----->Display all the records where the name has exactly 5 charchters

Select * from employee_details
         where FirstName like'_____';

Output:

	FirstName	Address		SecondName	EmployeeId	hiring_date	salary	city
	Nishi		Lakhimpur	Mehrotra	3		2023-03-09	40000	Maurabad

-------------------------------------------------------------------------------------------------------------------

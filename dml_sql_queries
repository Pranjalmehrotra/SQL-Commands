-------------------Creating a table called employee in the database(basic_query_3)---------------------------

Create table if not exists employee (
FirstName varchar (50),
Address varchar(20),
SecondName varchar(50),
EmployeeId  int(10),
hiring_date date);

Insert into employee values('Pranjal' ,'Lucknow','Mehrotra',1,'2023/01/09');

Insert into employee values('Rajesh' ,'Allahabad','Mehrotra',2,'2023/02/09');

Insert into employee values('Nishi' ,'Lakhimpur','Mehrotra',3,'2023/03/09');

Insert into employee values('Rishabh' ,'Noida','Mehrotra',4,'2023/04/09');

Insert into employee values('Lavi' ,'Delhi','Mehrotra',5,'2023/05/09');

---------------------------------------------------------------------------------------------------------------------------

----------Now we want to count the total number of rows present in the table--------------------

A. Without the alias:

Select count(*) from employee;

Output:

count(*)
5

Now the column name (count *) is looking somewhat weird. In order to have some meaningful name, we have to use the concept of alias.

---------------------------------------------------------------------------------------------------------------------------
B. With alias:

Select count(*) as total_row_sum from employee;

Output:

total_row_sum

5

Now column (total_row_sum) is looking good

-------------------------------------------------------------------------------------------------------------------------------


                ------------Now if we want to select any particular columns present in the table---------------

----------Now we want to select firstname and lastname from the table employee--------------

Select firstname,lastname from employee;

-----------------------------------------------------------------------------------------------------------------------------

--------Applying the concept of alias to the above selected columns------------

Select firstname as fname,lastname as lname from employee;

------------------------------------------------------------------------------------------------------------------------------

            ----------Creating the table(employee_details) for performing the various SQL queries operations------------------ 
            

Create table if not exists employee_details (
FirstName varchar (50),
Address varchar(20),
SecondName varchar(50),
EmployeeId  int(10),
hiring_date date,
salary int(50),
city varchar(50));

Insert into employee_details values('Rajesh' ,'Allahabad','Mehrotra',2,'2023/02/09',5000,'Rambagh');

Insert into employee_details values('Nishi' ,'Lakhimpur','Mehrotra',3,'2023/03/09',4000,'Maurabad');

Insert into employee_details values('Rishabh' ,'Noida','Mehrotra',4,'2023/04/09',3000,'jhalwa');

Insert into employee_details values('Lavi' ,'Delhi','Mehrotra',5,'2023/05/09',1000,'chalk');


---------------------------------------------------------------------------------------------------------------------

Query 1 -----> Display the total number of rows of records present in the aobve table

Solution:
Select count(*) as total_row_employee_details from  employee_details;

Output:

total_row_employee_details
4
---------------------------------------------------------------------------------------------------------------------

Query 2 -------> Display the Distinct hiring_date from the table employee_details:

Select Distinct(hiring_date) as distinct_hiring_date from employee_details;

Output:
distinct_hiring_date
2023-02-09
2023-03-09
2023-04-09
2023-05-09

-----------------------------------------------------------------------------------------------------------

Query 3 ------> Count the distinct number of hiring dates present in the above table

Select count(Distinct(hiring_date))as total_distinct_hiring_date from employee_details;

Output:

total_distinct_hiring_date
4
----------------------------------------------------------------------------------------------------------

----------------ADDING AN ADDITIONAL COLUMN IN THE TABLE-----------------

Note: This additional column will not be a part of the table.We cannot directly access the column as we access the already defined columns of the table.

Query 4 ----->Now we want to make the column of updated salary and update the salary by 20 percent along with displaying emplpoyeeid,first name, old salary, new salary 
from the above table.

Solution:

SELECT EmployeeId,
       FirstName,
       salary as old_salary,
       (salary + salary * 0.20) as new_salary
From   employee_details;

Output:

EmployeeId  FirstName   old_salary   new_salary
5	          Lavi	      1000	      1200.00
4	          Rishabh     3000	      3600.00
3	          Nishi	      4000	      4800.00
2	          Rajesh      5000	      6000.00

--------------------------------------------------------------------------------------------------------------------------------
      
                                -----------------Updates Query----------------
                                
  Query5------->Now we want to update the salary of the entire employees to 40000.
  
  Update employee_details 
	       set salary= 40000 ;
     
  ------------------------------------------------------------------------------------------------------------------------------
  
  Query6------->Update salary to 20% of the previous whose hiring_date = '2023-03-09':
  
  Update employee_details 
	       set salary= (salary + 0.20 * salary)
         where hiring_date = '2023-03-09';
   
   ----------------------------------------------------------------------------------------------------------------------------




